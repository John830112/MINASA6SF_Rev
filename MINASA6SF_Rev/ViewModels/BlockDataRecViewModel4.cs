using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MINASA6SF_Rev.ViewModels
{
    public partial class MainPanelViewModel
    {
        partial void BlockParameterRec4()
        {
            #region cc
            #region ccc
            //191
            cmdCode = Convert.ToInt32(parameter7_4byte1_383[1]);
            if (Convert.ToInt32(parameter7_4byte1_383[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);                    //블록데이터 구성

                BlockParaModel1s[191].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);

                BlockParaModel1s[191].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[191].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[191].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[191].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[191].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[191].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[191].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[191].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[191].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_383[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_383[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_383[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[191].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[191].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[191].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[191].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_383[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_383[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_383[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_383[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_384, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[191].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //192
            cmdCode = Convert.ToInt32(parameter7_4byte1_385[1]);
            if (Convert.ToInt32(parameter7_4byte1_385[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);                    //블록데이터 구성

                BlockParaModel1s[192].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);

                BlockParaModel1s[192].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[192].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[192].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[192].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[192].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[192].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[192].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[192].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[192].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_385[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_385[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_385[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[192].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[192].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[192].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[192].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_385[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_385[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_385[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_385[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_386, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[192].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //193
           cmdCode = Convert.ToInt32(parameter7_4byte1_387[1]);
                 if (Convert.ToInt32(parameter7_4byte1_387[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);                    //블록데이터 구성

                BlockParaModel1s[193].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);

                BlockParaModel1s[193].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[193].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[193].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[193].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[193].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[193].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[193].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[193].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[193].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_387[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_387[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_387[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[193].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[193].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[193].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[193].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_387[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_387[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_387[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_387[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_388, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[193].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //194
           cmdCode = Convert.ToInt32(parameter7_4byte1_389[1]);
                 if (Convert.ToInt32(parameter7_4byte1_389[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);                    //블록데이터 구성

                BlockParaModel1s[194].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);

                BlockParaModel1s[194].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[194].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[194].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[194].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[194].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[194].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[194].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[194].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[194].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_389[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_389[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_389[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[194].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[194].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[194].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[194].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_389[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_389[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_389[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_389[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_390, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[194].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //195
           cmdCode = Convert.ToInt32(parameter7_4byte1_391[1]);
                 if (Convert.ToInt32(parameter7_4byte1_391[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);                    //블록데이터 구성

                BlockParaModel1s[195].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);

                BlockParaModel1s[195].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[195].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[195].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[195].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[195].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[195].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[195].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[195].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[195].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_391[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_391[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_391[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[195].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[195].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[195].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[195].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_391[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_391[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_391[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_391[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_392, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[195].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //196
           cmdCode = Convert.ToInt32(parameter7_4byte1_393[1]);
                 if (Convert.ToInt32(parameter7_4byte1_393[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);                    //블록데이터 구성

                BlockParaModel1s[196].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);

                BlockParaModel1s[196].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[196].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[196].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[196].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[196].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[196].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[196].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[196].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[196].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_393[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_393[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_393[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[196].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[196].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[196].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[196].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_393[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_393[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_393[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_393[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_394, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[196].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //197
           cmdCode = Convert.ToInt32(parameter7_4byte1_395[1]);
                 if (Convert.ToInt32(parameter7_4byte1_395[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);                    //블록데이터 구성

                BlockParaModel1s[197].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);

                BlockParaModel1s[197].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[197].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[197].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[197].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[197].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[197].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[197].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[197].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[197].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_395[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_395[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_395[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[197].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[197].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[197].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[197].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_395[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_395[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_395[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_395[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_396, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[197].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //198
           cmdCode = Convert.ToInt32(parameter7_4byte1_397[1]);
                 if (Convert.ToInt32(parameter7_4byte1_397[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);                    //블록데이터 구성

                BlockParaModel1s[198].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);

                BlockParaModel1s[198].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[198].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[198].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[198].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[198].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[198].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[198].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[198].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[198].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_397[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_397[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_397[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[198].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[198].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[198].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[198].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_397[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_397[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_397[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_397[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_398, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[198].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            #endregion

            //199
            cmdCode = Convert.ToInt32(parameter7_4byte1_399[1]);
                 if (Convert.ToInt32(parameter7_4byte1_399[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);                    //블록데이터 구성

                BlockParaModel1s[199].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);

                BlockParaModel1s[199].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[199].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[199].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[199].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[199].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[199].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[199].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[199].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[199].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_399[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_399[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_399[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[199].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[199].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[199].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[199].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_399[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_399[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_399[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_399[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_400, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[199].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //200
           cmdCode = Convert.ToInt32(parameter7_4byte1_401[1]);
                 if (Convert.ToInt32(parameter7_4byte1_401[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);                    //블록데이터 구성

                BlockParaModel1s[200].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);

                BlockParaModel1s[200].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[200].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[200].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[200].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[200].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[200].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[200].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[200].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[200].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_401[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_401[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_401[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[200].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[200].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[200].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[200].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_401[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_401[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_401[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_401[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_402, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[200].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //201
           cmdCode = Convert.ToInt32(parameter7_4byte1_403[1]);
                 if (Convert.ToInt32(parameter7_4byte1_403[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);                    //블록데이터 구성

                BlockParaModel1s[201].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);

                BlockParaModel1s[201].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[201].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[201].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[201].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[201].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[201].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[201].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[201].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[201].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_403[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_403[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_403[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[201].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[201].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[201].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[201].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_403[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_403[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_403[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_403[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_404, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[201].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //202
           cmdCode = Convert.ToInt32(parameter7_4byte1_405[1]);
                 if (Convert.ToInt32(parameter7_4byte1_405[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);                    //블록데이터 구성

                BlockParaModel1s[202].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);

                BlockParaModel1s[202].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[202].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[202].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[202].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[202].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[202].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[202].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[202].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[202].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_405[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_405[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_405[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[202].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[202].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[202].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[202].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_405[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_405[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_405[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_405[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_406, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[202].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //203
           cmdCode = Convert.ToInt32(parameter7_4byte1_407[1]);
                 if (Convert.ToInt32(parameter7_4byte1_407[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);                    //블록데이터 구성

                BlockParaModel1s[203].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);

                BlockParaModel1s[203].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[203].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[203].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[203].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[203].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[203].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[203].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[203].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[203].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_407[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_407[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_407[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[203].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[203].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[203].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[203].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_407[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_407[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_407[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_407[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_408, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[203].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //204
           cmdCode = Convert.ToInt32(parameter7_4byte1_409[1]);
                 if (Convert.ToInt32(parameter7_4byte1_409[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);                    //블록데이터 구성

                BlockParaModel1s[204].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);

                BlockParaModel1s[204].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[204].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[204].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[204].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[204].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[204].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[204].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[204].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[204].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_409[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_409[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_409[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[204].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[204].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[204].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[204].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_409[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_409[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_409[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_409[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_410, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[204].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //205
           cmdCode = Convert.ToInt32(parameter7_4byte1_411[1]);
                 if (Convert.ToInt32(parameter7_4byte1_411[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);                    //블록데이터 구성

                BlockParaModel1s[205].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);

                BlockParaModel1s[205].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[205].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[205].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[205].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[205].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[205].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[205].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[205].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[205].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_411[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_411[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_411[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[205].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[205].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[205].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[205].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_411[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_411[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_411[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_411[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_412, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[205].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //206
           cmdCode = Convert.ToInt32(parameter7_4byte1_413[1]);
                 if (Convert.ToInt32(parameter7_4byte1_413[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);                    //블록데이터 구성

                BlockParaModel1s[206].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);

                BlockParaModel1s[206].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[206].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[206].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[206].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[206].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[206].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[206].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[206].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[206].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_413[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_413[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_413[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[206].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[206].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[206].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[206].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_413[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_413[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_413[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_413[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_414, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[206].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //207
           cmdCode = Convert.ToInt32(parameter7_4byte1_415[1]);
                 if (Convert.ToInt32(parameter7_4byte1_415[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);                    //블록데이터 구성

                BlockParaModel1s[207].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);

                BlockParaModel1s[207].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[207].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[207].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[207].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[207].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[207].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[207].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[207].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[207].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_415[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_415[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_415[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[207].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[207].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[207].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[207].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_415[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_415[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_415[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_415[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_416, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[207].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //208
           cmdCode = Convert.ToInt32(parameter7_4byte1_417[1]);
                 if (Convert.ToInt32(parameter7_4byte1_417[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);                    //블록데이터 구성

                BlockParaModel1s[208].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);

                BlockParaModel1s[208].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[208].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[208].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[208].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[208].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[208].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[208].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[208].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[208].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_417[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_417[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_417[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[208].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[208].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[208].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[208].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_417[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_417[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_417[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_417[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_418, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[208].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //209
           cmdCode = Convert.ToInt32(parameter7_4byte1_419[1]);
                 if (Convert.ToInt32(parameter7_4byte1_419[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);                    //블록데이터 구성

                BlockParaModel1s[209].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);

                BlockParaModel1s[209].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[209].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[209].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[209].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[209].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[209].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[209].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[209].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[209].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_419[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_419[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_419[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[209].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[209].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[209].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[209].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_419[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_419[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_419[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_419[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_420, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[209].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //210
           cmdCode = Convert.ToInt32(parameter7_4byte1_421[1]);
                 if (Convert.ToInt32(parameter7_4byte1_421[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);                    //블록데이터 구성

                BlockParaModel1s[210].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);

                BlockParaModel1s[210].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[210].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[210].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[210].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[210].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[210].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[210].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[210].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[210].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_421[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_421[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_421[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[210].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[210].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[210].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[210].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_421[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_421[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_421[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_421[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_422, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[210].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //211
           cmdCode = Convert.ToInt32(parameter7_4byte1_423[1]);
                 if (Convert.ToInt32(parameter7_4byte1_423[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);                    //블록데이터 구성

                BlockParaModel1s[211].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);

                BlockParaModel1s[211].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[211].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[211].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[211].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[211].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[211].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[211].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[211].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[211].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_423[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_423[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_423[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[211].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[211].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[211].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[211].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_423[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[3]) >> 4);           // hiki
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_423[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_423[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_423[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_424, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[211].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //212
           cmdCode = Convert.ToInt32(parameter7_4byte1_425[1]);
                 if (Convert.ToInt32(parameter7_4byte1_425[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);                    //블록데이터 구성

                BlockParaModel1s[212].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);

                BlockParaModel1s[212].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[212].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[212].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[212].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[212].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[212].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[212].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[212].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[212].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_425[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_425[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_425[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[212].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[212].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[212].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[212].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_425[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_425[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_425[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_425[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_426, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[212].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //213
           cmdCode = Convert.ToInt32(parameter7_4byte1_427[1]);
                 if (Convert.ToInt32(parameter7_4byte1_427[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);                    //블록데이터 구성

                BlockParaModel1s[213].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);

                BlockParaModel1s[213].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[213].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[213].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[213].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[213].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[213].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[213].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[213].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[213].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_427[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_427[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_427[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[213].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[213].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[213].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[213].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_427[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_427[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_427[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_427[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_428, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[213].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //214
           cmdCode = Convert.ToInt32(parameter7_4byte1_429[1]);
                 if (Convert.ToInt32(parameter7_4byte1_429[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);                    //블록데이터 구성

                BlockParaModel1s[214].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);

                BlockParaModel1s[214].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[214].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[214].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[214].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[214].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[214].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[214].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[214].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[214].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_429[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_429[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_429[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[214].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[214].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[214].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[214].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_429[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_429[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_429[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_429[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_430, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[214].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //215
           cmdCode = Convert.ToInt32(parameter7_4byte1_431[1]);
                 if (Convert.ToInt32(parameter7_4byte1_431[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);                    //블록데이터 구성

                BlockParaModel1s[215].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);

                BlockParaModel1s[215].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[215].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[215].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[215].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[215].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[215].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[215].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[215].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[215].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_431[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_431[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_431[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[215].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[215].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[215].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[215].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_431[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_431[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_431[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_431[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_432, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[215].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //216
           cmdCode = Convert.ToInt32(parameter7_4byte1_433[1]);
                 if (Convert.ToInt32(parameter7_4byte1_433[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);                    //블록데이터 구성

                BlockParaModel1s[216].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);

                BlockParaModel1s[216].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[216].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[216].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[216].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[216].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[216].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[216].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[216].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[216].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_433[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_433[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_433[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[216].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[216].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[216].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[216].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_433[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_433[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_433[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_433[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_434, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[216].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //217
           cmdCode = Convert.ToInt32(parameter7_4byte1_435[1]);
                 if (Convert.ToInt32(parameter7_4byte1_435[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);                    //블록데이터 구성

                BlockParaModel1s[217].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);

                BlockParaModel1s[217].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[217].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[217].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[217].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[217].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[217].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[217].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[217].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[217].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_435[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_435[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_435[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[217].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[217].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[217].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[217].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_435[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_435[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_435[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_435[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_436, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[217].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //218
           cmdCode = Convert.ToInt32(parameter7_4byte1_437[1]);
                 if (Convert.ToInt32(parameter7_4byte1_437[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);                    //블록데이터 구성

                BlockParaModel1s[218].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);

                BlockParaModel1s[218].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[218].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[218].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[218].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[218].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[218].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[218].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[218].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[218].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_437[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_437[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_437[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[218].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[218].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[218].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[218].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_437[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_437[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_437[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_437[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_438, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[218].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //219
           cmdCode = Convert.ToInt32(parameter7_4byte1_439[1]);
                 if (Convert.ToInt32(parameter7_4byte1_439[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);                    //블록데이터 구성

                BlockParaModel1s[219].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);

                BlockParaModel1s[219].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[219].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[219].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[219].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[219].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[219].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[219].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[219].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[219].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_439[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_439[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_439[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[219].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[219].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[219].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[219].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_439[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_439[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_439[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_439[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_440, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[219].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //220
           cmdCode = Convert.ToInt32(parameter7_4byte1_441[1]);
                 if (Convert.ToInt32(parameter7_4byte1_441[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);                    //블록데이터 구성

                BlockParaModel1s[220].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);

                BlockParaModel1s[220].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[220].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[220].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[220].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[220].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[220].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[220].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[220].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[220].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_441[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_441[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_441[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[220].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[220].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[220].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[220].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_441[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_441[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_441[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_441[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_442, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[220].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //221
           cmdCode = Convert.ToInt32(parameter7_4byte1_443[1]);
                 if (Convert.ToInt32(parameter7_4byte1_443[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);                    //블록데이터 구성

                BlockParaModel1s[221].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);

                BlockParaModel1s[221].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[221].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[221].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[221].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[221].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[221].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[221].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[221].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[221].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_443[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_443[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_443[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[221].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[221].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[221].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[221].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_443[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_443[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_443[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_443[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_444, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[221].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //222
           cmdCode = Convert.ToInt32(parameter7_4byte1_445[1]);
                 if (Convert.ToInt32(parameter7_4byte1_445[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);                    //블록데이터 구성

                BlockParaModel1s[222].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);

                BlockParaModel1s[222].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[222].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[222].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[222].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[222].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[222].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[222].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[222].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[222].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_445[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_445[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_445[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[222].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[222].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[222].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[222].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_445[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_445[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_445[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_445[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_446, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[222].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //223
           cmdCode = Convert.ToInt32(parameter7_4byte1_447[1]);
                 if (Convert.ToInt32(parameter7_4byte1_447[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);                    //블록데이터 구성

                BlockParaModel1s[223].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);

                BlockParaModel1s[223].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[223].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[223].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[223].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[223].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[223].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[223].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[223].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[223].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_447[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_447[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_447[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[223].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[223].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[223].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[223].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_447[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_447[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_447[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_447[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_448, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[223].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //224
           cmdCode = Convert.ToInt32(parameter7_4byte1_449[1]);
                 if (Convert.ToInt32(parameter7_4byte1_449[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);                    //블록데이터 구성

                BlockParaModel1s[224].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);

                BlockParaModel1s[224].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[224].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[224].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[224].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[224].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[224].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[224].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[224].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[224].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_449[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_449[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_449[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[224].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[224].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[224].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[224].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_449[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_449[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_449[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_449[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_450, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[224].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //225
           cmdCode = Convert.ToInt32(parameter7_4byte1_451[1]);
                 if (Convert.ToInt32(parameter7_4byte1_451[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);                    //블록데이터 구성

                BlockParaModel1s[225].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);

                BlockParaModel1s[225].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[225].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[225].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[225].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[225].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[225].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[225].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[225].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[225].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_451[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_451[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_451[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[225].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[225].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[225].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[225].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_451[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_451[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_451[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_451[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_452, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[225].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //226
           cmdCode = Convert.ToInt32(parameter7_4byte1_453[1]);
                 if (Convert.ToInt32(parameter7_4byte1_453[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);                    //블록데이터 구성

                BlockParaModel1s[226].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);

                BlockParaModel1s[226].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[226].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[226].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[226].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[226].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[226].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[226].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[226].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[226].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_453[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_453[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_453[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[226].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[226].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[226].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[226].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_453[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_453[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_453[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_453[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_454, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[226].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //227
           cmdCode = Convert.ToInt32(parameter7_4byte1_455[1]);
                 if (Convert.ToInt32(parameter7_4byte1_455[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);                    //블록데이터 구성

                BlockParaModel1s[227].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);

                BlockParaModel1s[227].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[227].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[227].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[227].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[227].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[227].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[227].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[227].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[227].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_455[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_455[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_455[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[227].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[227].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[227].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[227].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_455[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_455[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_455[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_455[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_456, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[227].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //228
           cmdCode = Convert.ToInt32(parameter7_4byte1_457[1]);
                 if (Convert.ToInt32(parameter7_4byte1_457[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);                    //블록데이터 구성

                BlockParaModel1s[228].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);

                BlockParaModel1s[228].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[228].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[228].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[228].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[228].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[228].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[228].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[228].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[228].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_457[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_457[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_457[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[228].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[228].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[228].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[228].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_457[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_457[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_457[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_457[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_458, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[228].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //229
           cmdCode = Convert.ToInt32(parameter7_4byte1_459[1]);
                 if (Convert.ToInt32(parameter7_4byte1_459[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);                    //블록데이터 구성

                BlockParaModel1s[229].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);

                BlockParaModel1s[229].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[229].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[229].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[229].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[229].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[229].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[229].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[229].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[229].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_459[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_459[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_459[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[229].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[229].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[229].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[229].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_459[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_459[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_459[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_459[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_460, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[229].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //230
           cmdCode = Convert.ToInt32(parameter7_4byte1_461[1]);
                 if (Convert.ToInt32(parameter7_4byte1_461[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);                    //블록데이터 구성

                BlockParaModel1s[230].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);

                BlockParaModel1s[230].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[230].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[230].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[230].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[230].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[230].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[230].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[230].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[230].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_461[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_461[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_461[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[230].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[230].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[230].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[230].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_461[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_461[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_461[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_461[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_462, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[230].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //231
           cmdCode = Convert.ToInt32(parameter7_4byte1_463[1]);
                 if (Convert.ToInt32(parameter7_4byte1_463[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);                    //블록데이터 구성

                BlockParaModel1s[231].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);

                BlockParaModel1s[231].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[231].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[231].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[231].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[231].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[231].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[231].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[231].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[231].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_463[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_463[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_463[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[231].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[231].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[231].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[231].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_463[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_463[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_463[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_463[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_464, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[231].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //232
           cmdCode = Convert.ToInt32(parameter7_4byte1_465[1]);
                 if (Convert.ToInt32(parameter7_4byte1_465[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);                    //블록데이터 구성

                BlockParaModel1s[232].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);

                BlockParaModel1s[232].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[232].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[232].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[232].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[232].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[232].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[232].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[232].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[232].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_465[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_465[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_465[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[232].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[232].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[232].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[232].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_465[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_465[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_465[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_465[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_466, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[232].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //233
           cmdCode = Convert.ToInt32(parameter7_4byte1_467[1]);
                 if (Convert.ToInt32(parameter7_4byte1_467[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);                    //블록데이터 구성

                BlockParaModel1s[233].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);

                BlockParaModel1s[233].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[233].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[233].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[233].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[233].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[233].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[233].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[233].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[190].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_467[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_467[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_467[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[233].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[233].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[233].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[233].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_467[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_467[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_467[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_467[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_468, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[233].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //234
           cmdCode = Convert.ToInt32(parameter7_4byte1_469[1]);
                 if (Convert.ToInt32(parameter7_4byte1_469[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);                    //블록데이터 구성

                BlockParaModel1s[234].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);

                BlockParaModel1s[234].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[234].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[234].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[234].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[234].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[234].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[234].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[234].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[234].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_469[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_469[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_469[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[234].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[234].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[234].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[234].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_469[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_469[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_469[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_469[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_470, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[234].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //235
           cmdCode = Convert.ToInt32(parameter7_4byte1_471[1]);
                 if (Convert.ToInt32(parameter7_4byte1_471[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);                    //블록데이터 구성

                BlockParaModel1s[235].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);

                BlockParaModel1s[235].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[235].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[235].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[235].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[235].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[235].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[235].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[235].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[235].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_471[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_471[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_471[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[235].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[235].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[235].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[235].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_471[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_471[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_471[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_471[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_472, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[235].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //236
           cmdCode = Convert.ToInt32(parameter7_4byte1_473[1]);
                 if (Convert.ToInt32(parameter7_4byte1_473[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);                    //블록데이터 구성

                BlockParaModel1s[236].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);

                BlockParaModel1s[236].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[236].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[236].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 4)                                      //원점복귀
            {
                  SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) >> 4);                 //검출방법 hiki1
                 Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);//방향     hiki4
               BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[236].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_474[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[236].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[236].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 6)                                       //속도갱신
            {
                   SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[0]) >> 4);                 //속도번호  hiki1
                  Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[236].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[236].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[236].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_473[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_473[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_473[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[236].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[236].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[236].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[236].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_473[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_473[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_473[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_473[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_474, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[236].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //237
           cmdCode = Convert.ToInt32(parameter7_4byte1_475[1]);
                 if (Convert.ToInt32(parameter7_4byte1_475[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);                    //블록데이터 구성

                BlockParaModel1s[237].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);

                BlockParaModel1s[237].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[237].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[237].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[237].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[237].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[237].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[237].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[237].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[237].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_475[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_475[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_475[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[237].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[237].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[237].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[237].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_475[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_475[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_475[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_475[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_476, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[237].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //238
           cmdCode = Convert.ToInt32(parameter7_4byte1_477[1]);
                 if (Convert.ToInt32(parameter7_4byte1_477[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);                    //블록데이터 구성

                BlockParaModel1s[238].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);

                BlockParaModel1s[238].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[238].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[238].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[238].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[238].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[238].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 6)                                       //속도갱신
            {
                   SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[0]) >> 4);                 //속도번호  hiki1
                  Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[238].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[238].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[238].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_477[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_477[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_477[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[238].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[238].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[238].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[238].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_477[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_477[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_477[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_477[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_478, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[238].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //239
           cmdCode = Convert.ToInt32(parameter7_4byte1_479[1]);
                 if (Convert.ToInt32(parameter7_4byte1_479[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);                    //블록데이터 구성

                BlockParaModel1s[239].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);

                BlockParaModel1s[239].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[239].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[239].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[239].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[239].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[239].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[239].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[239].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[239].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_479[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_479[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_479[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[239].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[239].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[239].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[239].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_479[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_479[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_479[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_479[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_480, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[239].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //240
           cmdCode = Convert.ToInt32(parameter7_4byte1_481[1]);
                 if (Convert.ToInt32(parameter7_4byte1_481[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);                    //블록데이터 구성

                BlockParaModel1s[240].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);

                BlockParaModel1s[240].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[240].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[240].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[240].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[240].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[240].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[240].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[240].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[240].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_481[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_481[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_481[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[240].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[240].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[240].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[240].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_481[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_481[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_481[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_481[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_482, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[240].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //241
           cmdCode = Convert.ToInt32(parameter7_4byte1_483[1]);
                 if (Convert.ToInt32(parameter7_4byte1_483[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);                    //블록데이터 구성

                BlockParaModel1s[241].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);

                BlockParaModel1s[241].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[241].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[241].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[241].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[241].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[241].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[241].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[241].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[241].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_483[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_483[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_483[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[241].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[241].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[241].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[241].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_483[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_483[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_483[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_483[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_484, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[241].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //242
           cmdCode = Convert.ToInt32(parameter7_4byte1_485[1]);
                 if (Convert.ToInt32(parameter7_4byte1_485[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);                    //블록데이터 구성

                BlockParaModel1s[242].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);

                BlockParaModel1s[242].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[242].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[242].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[242].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[242].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[242].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[242].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[242].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[242].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_485[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_485[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_485[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[242].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[242].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[242].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[242].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_485[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_485[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_485[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_485[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_486, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[242].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //243
           cmdCode = Convert.ToInt32(parameter7_4byte1_487[1]);
                 if (Convert.ToInt32(parameter7_4byte1_487[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);                    //블록데이터 구성

                BlockParaModel1s[243].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);

                BlockParaModel1s[243].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[243].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[243].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[243].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[243].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[243].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[243].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[243].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[243].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_487[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_487[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_487[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[243].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[243].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[243].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[243].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_487[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_487[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_487[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_487[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_488, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[243].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //244
           cmdCode = Convert.ToInt32(parameter7_4byte1_489[1]);
                 if (Convert.ToInt32(parameter7_4byte1_489[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);                    //블록데이터 구성

                BlockParaModel1s[244].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);

                BlockParaModel1s[244].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[244].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[244].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[244].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[244].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[244].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[244].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[244].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[244].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_489[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_489[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_489[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[244].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[244].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[244].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[244].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_489[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_489[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_489[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_489[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_490, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[244].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //245
           cmdCode = Convert.ToInt32(parameter7_4byte1_491[1]);
                 if (Convert.ToInt32(parameter7_4byte1_491[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);                    //블록데이터 구성

                BlockParaModel1s[245].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);

                BlockParaModel1s[245].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[245].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[245].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[245].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[245].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[245].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 6)                                       //속도갱신
            {
                  SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[0]) >> 4);                 //속도번호  hiki1
                 Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
               BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[245].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[245].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[245].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_491[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_491[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_491[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[245].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[245].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[245].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[245].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_491[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_491[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_491[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_491[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_492, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[245].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //246
           cmdCode = Convert.ToInt32(parameter7_4byte1_493[1]);
                 if (Convert.ToInt32(parameter7_4byte1_493[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);                    //블록데이터 구성

                BlockParaModel1s[246].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);

                BlockParaModel1s[246].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[246].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[246].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[246].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[246].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[246].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[246].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[246].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[246].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_493[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_493[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_493[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[246].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[246].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[246].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[246].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_493[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_493[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_493[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_493[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_494, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[246].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //247
           cmdCode = Convert.ToInt32(parameter7_4byte1_495[1]);
                 if (Convert.ToInt32(parameter7_4byte1_495[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);                    //블록데이터 구성

                BlockParaModel1s[247].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);

                BlockParaModel1s[247].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[247].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[247].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[247].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[247].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[247].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[247].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[247].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[247].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_495[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_495[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_495[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[247].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[247].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[247].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[247].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_495[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_495[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_495[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_495[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_496, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[247].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //248
           cmdCode = Convert.ToInt32(parameter7_4byte1_497[1]);
                 if (Convert.ToInt32(parameter7_4byte1_497[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);                    //블록데이터 구성

                BlockParaModel1s[248].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);

                BlockParaModel1s[248].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[248].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[248].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[248].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[248].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[248].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[248].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[248].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[248].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_497[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_497[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_497[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[248].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[248].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[248].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[248].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_497[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_497[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_497[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_497[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_498, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[248].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //249
           cmdCode = Convert.ToInt32(parameter7_4byte1_499[1]);
                 if (Convert.ToInt32(parameter7_4byte1_499[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);                    //블록데이터 구성

                BlockParaModel1s[249].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);

                BlockParaModel1s[249].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[249].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[249].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[249].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[249].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[249].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[249].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[249].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[249].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_499[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_499[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_499[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[249].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[249].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[249].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[249].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_499[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_499[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_499[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_499[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_500, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[249].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //250
           cmdCode = Convert.ToInt32(parameter7_4byte1_501[1]);
                 if (Convert.ToInt32(parameter7_4byte1_501[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);                    //블록데이터 구성

                BlockParaModel1s[250].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);

                BlockParaModel1s[250].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[250].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[250].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[250].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[250].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[250].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[250].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[250].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[250].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_501[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_501[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_501[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[250].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[250].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[250].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[250].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_501[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_501[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_501[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_501[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_502, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[250].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //251
           cmdCode = Convert.ToInt32(parameter7_4byte1_503[1]);
                 if (Convert.ToInt32(parameter7_4byte1_503[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);                    //블록데이터 구성

                BlockParaModel1s[251].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);

                BlockParaModel1s[251].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[251].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[251].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[251].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[251].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[251].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[251].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[251].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[251].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_503[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_503[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_503[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[251].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[251].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[251].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[251].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_503[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_503[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_503[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_503[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_504, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[251].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //252
           cmdCode = Convert.ToInt32(parameter7_4byte1_505[1]);
                 if (Convert.ToInt32(parameter7_4byte1_505[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);                    //블록데이터 구성

                BlockParaModel1s[252].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);

                BlockParaModel1s[252].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[252].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[252].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[252].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[252].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[252].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[252].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[252].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[252].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_505[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_505[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_505[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[252].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[252].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[252].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[252].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_505[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_505[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_505[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_505[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_506, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[252].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //253
           cmdCode = Convert.ToInt32(parameter7_4byte1_507[1]);
                 if (Convert.ToInt32(parameter7_4byte1_507[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);                    //블록데이터 구성

                BlockParaModel1s[253].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);

                BlockParaModel1s[253].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[253].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[253].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[253].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[253].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[253].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[253].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[253].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[253].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_507[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_507[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_507[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[253].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[253].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[253].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[253].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_507[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_507[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_507[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_507[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_508, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[253].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //254
           cmdCode = Convert.ToInt32(parameter7_4byte1_509[1]);
                 if (Convert.ToInt32(parameter7_4byte1_509[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);                    //블록데이터 구성

                BlockParaModel1s[254].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);

                BlockParaModel1s[254].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[254].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[254].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[254].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[254].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[254].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[254].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[254].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[254].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_509[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_509[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_509[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[254].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[254].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[254].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[254].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_509[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_509[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_509[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_509[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_510, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[254].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //255
           cmdCode = Convert.ToInt32(parameter7_4byte1_511[1]);
                 if (Convert.ToInt32(parameter7_4byte1_511[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);                    //블록데이터 구성

                BlockParaModel1s[255].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);

                BlockParaModel1s[255].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[255].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[255].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[255].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[255].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[255].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[255].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[255].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[255].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_511[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_511[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_511[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[255].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[255].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[255].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[255].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_511[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_511[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_511[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_511[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_512, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[255].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }

            #endregion
            Debug.WriteLine("BlockParameterRec4 실행 완료");

        }
    }
}
