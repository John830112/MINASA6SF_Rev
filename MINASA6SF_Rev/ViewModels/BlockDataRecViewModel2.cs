using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Controls;
using System.Threading.Tasks;
using System.Windows.Input;
using MINASA6SF_Rev;
using MINASA6SF_Rev.Models;
using MINASA6SF_Rev.Views;
using System.ComponentModel;
using System.Collections.ObjectModel;
using System.Configuration;
using System.Reflection;
using System.Windows;
using System.Windows.Controls.Primitives;
using System.Windows.Media.Imaging;
using System.Runtime.CompilerServices;
using System.Timers;
using System.Windows.Threading;
using System.Windows.Documents;
using System.Net;
using System.Diagnostics;
using System.Windows.Media;
using System.Windows.Interactivity;
using System.Diagnostics.Eventing.Reader;
using System.Threading;
using System.Collections;

namespace MINASA6SF_Rev.ViewModels
{
    public partial class MainPanelViewModel
    {
        partial void BlockParameterRec2()
        {
            
            //101번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_203[1]);
                 if (Convert.ToInt32(parameter7_4byte1_203[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                    //블록데이터 구성
              
                BlockParaModel1s[101].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                           //블록데이터 구성

                BlockParaModel1s[101].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[101].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[101].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[101].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[101].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[101].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[101].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[101].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[101].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_203[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_203[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_203[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[101].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[101].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[101].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[101].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_203[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_203[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_203[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_203[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_204, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[101].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //102번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_205[1]);
                 if (Convert.ToInt32(parameter7_4byte1_205[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                    //블록데이터 구성

                BlockParaModel1s[102].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                           //블록데이터 구성

                BlockParaModel1s[102].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[102].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[102].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[102].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[102].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[102].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[102].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[102].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[102].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_205[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_205[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_205[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[102].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[102].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[102].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[102].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_205[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_205[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_205[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_205[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_206, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[102].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //103번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_207[1]);
                 if (Convert.ToInt32(parameter7_4byte1_207[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                    //블록데이터 구성

                BlockParaModel1s[103].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                           //블록데이터 구성

                BlockParaModel1s[103].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[103].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[103].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[103].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[103].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[103].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[103].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[103].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[103].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_207[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_207[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_207[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[103].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[103].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[103].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[103].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_207[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_207[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_207[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_207[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_208, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[103].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //104번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_209[1]);
                 if (Convert.ToInt32(parameter7_4byte1_209[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                    //블록데이터 구성

                BlockParaModel1s[104].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                           //블록데이터 구성

                BlockParaModel1s[104].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[104].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[104].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[104].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[104].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[104].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[104].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[104].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[104].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_209[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_209[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_209[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[104].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[104].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[104].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[104].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_209[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_209[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_209[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_209[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_210, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[104].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //105번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_211[1]);
                 if (Convert.ToInt32(parameter7_4byte1_211[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                    //블록데이터 구성

                BlockParaModel1s[105].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                           //블록데이터 구성

                BlockParaModel1s[105].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[105].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[105].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[105].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[105].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[105].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[105].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[105].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[105].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_211[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_211[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_211[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[105].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[105].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[105].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[105].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_211[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_211[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_211[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_211[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_212, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[105].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //106번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_213[1]);
                 if (Convert.ToInt32(parameter7_4byte1_213[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                    //블록데이터 구성

                BlockParaModel1s[106].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                           //블록데이터 구성

                BlockParaModel1s[106].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[106].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[106].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[106].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[106].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[106].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[106].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[106].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[106].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_213[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_213[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_213[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[106].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[106].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[106].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[106].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_213[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_213[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_213[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_213[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_214, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[106].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //107번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_215[1]);
                 if (Convert.ToInt32(parameter7_4byte1_215[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                    //블록데이터 구성

                BlockParaModel1s[107].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                           //블록데이터 구성

                BlockParaModel1s[107].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[107].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[107].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[107].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[107].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[107].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[107].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[107].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[107].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_215[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_215[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_215[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[107].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[107].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[107].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[107].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_215[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_215[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_215[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_215[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_216, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[107].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }

            //108번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_217[1]);
                 if (Convert.ToInt32(parameter7_4byte1_217[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                    //블록데이터 구성

                BlockParaModel1s[108].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                           //블록데이터 구성

                BlockParaModel1s[108].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[108].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[108].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[108].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[108].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[108].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[108].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[108].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[108].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_217[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_217[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_217[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[108].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[108].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[108].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[108].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_217[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_217[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_217[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_217[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_218, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[108].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //109번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_219[1]);
                 if (Convert.ToInt32(parameter7_4byte1_219[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                    //블록데이터 구성

                BlockParaModel1s[109].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                           //블록데이터 구성

                BlockParaModel1s[109].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[109].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[109].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[109].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[109].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[109].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[109].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[109].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[109].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_219[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_219[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_219[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[109].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[109].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[109].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[109].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_219[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_219[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_219[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_219[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_220, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[109].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //110번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_221[1]);
                 if (Convert.ToInt32(parameter7_4byte1_221[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                    //블록데이터 구성

                BlockParaModel1s[110].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                           //블록데이터 구성

                BlockParaModel1s[110].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[110].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[110].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[110].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[110].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[110].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[110].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[110].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[110].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_221[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_221[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_221[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[110].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[110].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[110].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[110].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_221[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_221[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_221[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_221[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_222, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[110].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //111번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_223[1]);
                 if (Convert.ToInt32(parameter7_4byte1_223[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                    //블록데이터 구성

                BlockParaModel1s[111].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                           //블록데이터 구성

                BlockParaModel1s[111].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[111].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[111].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[111].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[111].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[111].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[111].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[111].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[111].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_223[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_223[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_223[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[111].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[111].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[111].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[111].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_223[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_223[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_223[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_223[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_224, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[111].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //112번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_225[1]);
                 if (Convert.ToInt32(parameter7_4byte1_225[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                    //블록데이터 구성

                BlockParaModel1s[112].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                           //블록데이터 구성

                BlockParaModel1s[112].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[112].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[112].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[112].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[112].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[112].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[112].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[112].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[112].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_225[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_225[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_225[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[112].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[112].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[112].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[112].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_225[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_225[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_225[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_225[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_226, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[112].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //113번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_227[1]);
                 if (Convert.ToInt32(parameter7_4byte1_227[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                    //블록데이터 구성

                BlockParaModel1s[113].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                           //블록데이터 구성

                BlockParaModel1s[113].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[113].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[113].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[113].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[113].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[113].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[113].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[113].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[113].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_227[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_227[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_227[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[113].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[113].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[113].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[113].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_227[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_227[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_227[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_227[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_228, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[113].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //114번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_229[1]);
                 if (Convert.ToInt32(parameter7_4byte1_229[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                    //블록데이터 구성

                BlockParaModel1s[114].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                           //블록데이터 구성

                BlockParaModel1s[114].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[114].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[114].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[114].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[114].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[114].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[114].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[114].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[114].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_229[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_229[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_229[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[114].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[114].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[114].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[114].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_229[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_229[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_229[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_229[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_230, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[114].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //115번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_231[1]);
                 if (Convert.ToInt32(parameter7_4byte1_231[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                    //블록데이터 구성

                BlockParaModel1s[115].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                           //블록데이터 구성

                BlockParaModel1s[115].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[115].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[115].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[115].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[115].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[115].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 6)                                       //속도갱신
            {
                   SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[0]) >> 4);                 //속도번호  hiki1
                  Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[115].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[115].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 7)                                       //디크리멘트 카운트 기동
            {
               BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이조건 hiki5
              TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[115].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_231[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_231[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_231[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[115].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[115].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[115].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[115].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_231[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_231[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_231[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_231[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_232, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[115].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //116번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_233[1]);
                 if (Convert.ToInt32(parameter7_4byte1_233[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                    //블록데이터 구성

                BlockParaModel1s[116].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                           //블록데이터 구성

                BlockParaModel1s[116].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[116].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[116].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[116].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[116].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[116].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 6)                                       //속도갱신
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[116].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[116].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[116].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_233[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_233[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_233[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[116].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[116].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[116].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[116].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_233[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_233[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_233[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_233[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_234, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[116].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //117번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_235[1]);
                 if (Convert.ToInt32(parameter7_4byte1_235[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                    //블록데이터 구성

                BlockParaModel1s[117].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                           //블록데이터 구성

                BlockParaModel1s[117].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[117].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[117].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[117].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[117].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[117].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[117].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[117].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[117].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_235[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_235[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_235[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[117].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[117].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[117].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[117].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_235[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_235[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_235[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_235[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_236, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[117].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //118번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_237[1]);
                 if (Convert.ToInt32(parameter7_4byte1_237[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                    //블록데이터 구성

                BlockParaModel1s[118].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                           //블록데이터 구성

                BlockParaModel1s[118].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[118].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[118].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[118].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[118].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[118].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[118].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[118].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[118].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_237[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_237[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_237[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[118].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);          //천이조건 hiki5
                  
                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[118].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[118].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[118].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_237[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_237[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_237[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_237[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_238, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[118].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //119번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_239[1]);
                 if (Convert.ToInt32(parameter7_4byte1_239[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                    //블록데이터 구성

                BlockParaModel1s[119].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                           //블록데이터 구성

                BlockParaModel1s[119].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[119].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[119].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[119].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[119].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[119].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[119].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[119].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[119].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_239[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_239[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_239[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[119].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[119].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[119].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[119].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_239[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_239[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_239[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_239[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_240, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[119].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //120번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_241[1]);
                 if (Convert.ToInt32(parameter7_4byte1_241[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                    //블록데이터 구성

                BlockParaModel1s[120].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                           //블록데이터 구성

                BlockParaModel1s[120].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[120].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[120].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 4)                                      //원점복귀
            {
                 SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);//방향     hiki4
              BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[120].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[120].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[120].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[120].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[120].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[120].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_241[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_241[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_241[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[120].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[120].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[120].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[120].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_241[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_241[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_241[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_241[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_242, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[120].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //121번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_243[1]);
                 if (Convert.ToInt32(parameter7_4byte1_243[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                    //블록데이터 구성

                BlockParaModel1s[121].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                           //블록데이터 구성

                BlockParaModel1s[121].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[121].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[121].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[121].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[121].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[121].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[121].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[121].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이조건 hiki5
               TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[121].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_243[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_243[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_243[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[121].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[121].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[121].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[121].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_243[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_243[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_243[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_243[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_244, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[121].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //122번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_245[1]);
                 if (Convert.ToInt32(parameter7_4byte1_245[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                    //블록데이터 구성

                BlockParaModel1s[122].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                           //블록데이터 구성

                BlockParaModel1s[122].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[122].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[122].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[122].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 5)                                       //감속정지
            {
               StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[122].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[122].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[122].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[122].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[122].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_245[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_245[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_245[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[122].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);  //   hiki4
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[122].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[122].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[122].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_245[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_245[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_245[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_245[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_246, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[122].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //123번 블록
           cmdCode = Convert.ToInt32(parameter7_4byte1_247[1]);
                 if (Convert.ToInt32(parameter7_4byte1_247[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
            TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);  

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
               Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
             BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                 BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
         BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 9)                                       //점프
            {
                 ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                 ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_247[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
               ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                           SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                        BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                       TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }




            //124
           cmdCode = Convert.ToInt32(parameter7_4byte1_249[1]);
                 if (Convert.ToInt32(parameter7_4byte1_249[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_249[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //125
           cmdCode = Convert.ToInt32(parameter7_4byte1_251[1]);
                 if (Convert.ToInt32(parameter7_4byte1_251[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_251[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //126
           cmdCode = Convert.ToInt32(parameter7_4byte1_253[1]);
                 if (Convert.ToInt32(parameter7_4byte1_253[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_253[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //127
           cmdCode = Convert.ToInt32(parameter7_4byte1_255[1]);
                 if (Convert.ToInt32(parameter7_4byte1_255[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_255[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //128
           cmdCode = Convert.ToInt32(parameter7_4byte1_257[1]);
                 if (Convert.ToInt32(parameter7_4byte1_257[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_257[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //129
           cmdCode = Convert.ToInt32(parameter7_4byte1_259[1]);
                 if (Convert.ToInt32(parameter7_4byte1_259[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_259[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //130
           cmdCode = Convert.ToInt32(parameter7_4byte1_261[1]);
                 if (Convert.ToInt32(parameter7_4byte1_261[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_261[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //131
           cmdCode = Convert.ToInt32(parameter7_4byte1_263[1]);
                 if (Convert.ToInt32(parameter7_4byte1_263[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_263[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //132
           cmdCode = Convert.ToInt32(parameter7_4byte1_265[1]);
                 if (Convert.ToInt32(parameter7_4byte1_265[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_265[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //133
           cmdCode = Convert.ToInt32(parameter7_4byte1_267[1]);
                 if (Convert.ToInt32(parameter7_4byte1_267[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_267[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //134
           cmdCode = Convert.ToInt32(parameter7_4byte1_269[1]);
                 if (Convert.ToInt32(parameter7_4byte1_269[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_269[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //135
           cmdCode = Convert.ToInt32(parameter7_4byte1_271[1]);
                 if (Convert.ToInt32(parameter7_4byte1_271[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_271[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //136
           cmdCode = Convert.ToInt32(parameter7_4byte1_273[1]);
                 if (Convert.ToInt32(parameter7_4byte1_273[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_273[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //137
           cmdCode = Convert.ToInt32(parameter7_4byte1_275[1]);
                 if (Convert.ToInt32(parameter7_4byte1_275[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_275[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //138
           cmdCode = Convert.ToInt32(parameter7_4byte1_277[1]);
                 if (Convert.ToInt32(parameter7_4byte1_277[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_277[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //139
           cmdCode = Convert.ToInt32(parameter7_4byte1_279[1]);
                 if (Convert.ToInt32(parameter7_4byte1_279[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_279[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //140
           cmdCode = Convert.ToInt32(parameter7_4byte1_281[1]);
                 if (Convert.ToInt32(parameter7_4byte1_281[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_281[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //141
           cmdCode = Convert.ToInt32(parameter7_4byte1_283[1]);
                 if (Convert.ToInt32(parameter7_4byte1_283[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_283[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //142
           cmdCode = Convert.ToInt32(parameter7_4byte1_285[1]);
                 if (Convert.ToInt32(parameter7_4byte1_285[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_285[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //143
           cmdCode = Convert.ToInt32(parameter7_4byte1_287[1]);
                 if (Convert.ToInt32(parameter7_4byte1_287[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_287[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //144
           cmdCode = Convert.ToInt32(parameter7_4byte1_289[1]);
                 if (Convert.ToInt32(parameter7_4byte1_289[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_289[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //145
           cmdCode = Convert.ToInt32(parameter7_4byte1_291[1]);
                 if (Convert.ToInt32(parameter7_4byte1_291[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_291[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //146
           cmdCode = Convert.ToInt32(parameter7_4byte1_293[1]);
                 if (Convert.ToInt32(parameter7_4byte1_293[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_293[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //147
           cmdCode = Convert.ToInt32(parameter7_4byte1_295[1]);
                 if (Convert.ToInt32(parameter7_4byte1_295[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_295[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //148
           cmdCode = Convert.ToInt32(parameter7_4byte1_297[1]);
                 if (Convert.ToInt32(parameter7_4byte1_297[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_297[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //149
           cmdCode = Convert.ToInt32(parameter7_4byte1_299[1]);
                 if (Convert.ToInt32(parameter7_4byte1_299[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_299[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //150
           cmdCode = Convert.ToInt32(parameter7_4byte1_301[1]);
                 if (Convert.ToInt32(parameter7_4byte1_301[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_301[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //151
           cmdCode = Convert.ToInt32(parameter7_4byte1_303[1]);
                 if (Convert.ToInt32(parameter7_4byte1_303[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_303[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //152
           cmdCode = Convert.ToInt32(parameter7_4byte1_305[1]);
                 if (Convert.ToInt32(parameter7_4byte1_305[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_305[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //153
           cmdCode = Convert.ToInt32(parameter7_4byte1_307[1]);
                 if (Convert.ToInt32(parameter7_4byte1_307[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_307[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //154
           cmdCode = Convert.ToInt32(parameter7_4byte1_309[1]);
                 if (Convert.ToInt32(parameter7_4byte1_309[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_309[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //155
           cmdCode = Convert.ToInt32(parameter7_4byte1_311[1]);
                 if (Convert.ToInt32(parameter7_4byte1_311[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_311[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //156
           cmdCode = Convert.ToInt32(parameter7_4byte1_313[1]);
                 if (Convert.ToInt32(parameter7_4byte1_313[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_313[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //157
           cmdCode = Convert.ToInt32(parameter7_4byte1_315[1]);
                 if (Convert.ToInt32(parameter7_4byte1_315[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_315[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //158
           cmdCode = Convert.ToInt32(parameter7_4byte1_317[1]);
                 if (Convert.ToInt32(parameter7_4byte1_317[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_317[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //159
           cmdCode = Convert.ToInt32(parameter7_4byte1_319[1]);
                 if (Convert.ToInt32(parameter7_4byte1_319[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_319[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //160
           cmdCode = Convert.ToInt32(parameter7_4byte1_321[1]);
                 if (Convert.ToInt32(parameter7_4byte1_321[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_321[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //161
           cmdCode = Convert.ToInt32(parameter7_4byte1_323[1]);
                 if (Convert.ToInt32(parameter7_4byte1_323[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_323[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //162
           cmdCode = Convert.ToInt32(parameter7_4byte1_325[1]);
                 if (Convert.ToInt32(parameter7_4byte1_325[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_325[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //163
           cmdCode = Convert.ToInt32(parameter7_4byte1_327[1]);
                 if (Convert.ToInt32(parameter7_4byte1_327[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_327[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //164
           cmdCode = Convert.ToInt32(parameter7_4byte1_329[1]);
                 if (Convert.ToInt32(parameter7_4byte1_329[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_329[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //165
           cmdCode = Convert.ToInt32(parameter7_4byte1_331[1]);
                 if (Convert.ToInt32(parameter7_4byte1_331[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_331[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //166
           cmdCode = Convert.ToInt32(parameter7_4byte1_333[1]);
                 if (Convert.ToInt32(parameter7_4byte1_333[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_333[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



             //167
           cmdCode = Convert.ToInt32(parameter7_4byte1_335[1]);
                 if (Convert.ToInt32(parameter7_4byte1_335[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_335[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //168
           cmdCode = Convert.ToInt32(parameter7_4byte1_337[1]);
                 if (Convert.ToInt32(parameter7_4byte1_337[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_337[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //169
           cmdCode = Convert.ToInt32(parameter7_4byte1_339[1]);
                 if (Convert.ToInt32(parameter7_4byte1_339[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_339[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



             //170
           cmdCode = Convert.ToInt32(parameter7_4byte1_341[1]);
                 if (Convert.ToInt32(parameter7_4byte1_341[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_341[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



             //171
           cmdCode = Convert.ToInt32(parameter7_4byte1_343[1]);
                 if (Convert.ToInt32(parameter7_4byte1_343[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_343[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



             //172
           cmdCode = Convert.ToInt32(parameter7_4byte1_345[1]);
                 if (Convert.ToInt32(parameter7_4byte1_345[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_345[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //173
           cmdCode = Convert.ToInt32(parameter7_4byte1_347[1]);
                 if (Convert.ToInt32(parameter7_4byte1_347[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_347[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //174
           cmdCode = Convert.ToInt32(parameter7_4byte1_349[1]);
                 if (Convert.ToInt32(parameter7_4byte1_349[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_349[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //175
           cmdCode = Convert.ToInt32(parameter7_4byte1_351[1]);
                 if (Convert.ToInt32(parameter7_4byte1_351[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_351[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //176
           cmdCode = Convert.ToInt32(parameter7_4byte1_353[1]);
                 if (Convert.ToInt32(parameter7_4byte1_353[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_353[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //177
           cmdCode = Convert.ToInt32(parameter7_4byte1_355[1]);
                 if (Convert.ToInt32(parameter7_4byte1_355[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_355[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //178
           cmdCode = Convert.ToInt32(parameter7_4byte1_357[1]);
                 if (Convert.ToInt32(parameter7_4byte1_357[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_357[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //179
           cmdCode = Convert.ToInt32(parameter7_4byte1_359[1]);
                 if (Convert.ToInt32(parameter7_4byte1_359[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_359[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //180
           cmdCode = Convert.ToInt32(parameter7_4byte1_361[1]);
                 if (Convert.ToInt32(parameter7_4byte1_361[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_361[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //181
           cmdCode = Convert.ToInt32(parameter7_4byte1_363[1]);
                 if (Convert.ToInt32(parameter7_4byte1_363[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_363[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //182
           cmdCode = Convert.ToInt32(parameter7_4byte1_365[1]);
                 if (Convert.ToInt32(parameter7_4byte1_365[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_365[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //183
           cmdCode = Convert.ToInt32(parameter7_4byte1_367[1]);
                 if (Convert.ToInt32(parameter7_4byte1_367[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_367[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //184
           cmdCode = Convert.ToInt32(parameter7_4byte1_369[1]);
                 if (Convert.ToInt32(parameter7_4byte1_369[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_369[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //185
           cmdCode = Convert.ToInt32(parameter7_4byte1_371[1]);
                 if (Convert.ToInt32(parameter7_4byte1_371[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_371[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //186
           cmdCode = Convert.ToInt32(parameter7_4byte1_373[1]);
                 if (Convert.ToInt32(parameter7_4byte1_373[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_373[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //187
           cmdCode = Convert.ToInt32(parameter7_4byte1_375[1]);
                 if (Convert.ToInt32(parameter7_4byte1_375[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_375[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            //188
           cmdCode = Convert.ToInt32(parameter7_4byte1_377[1]);
                 if (Convert.ToInt32(parameter7_4byte1_377[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_377[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //189
           cmdCode = Convert.ToInt32(parameter7_4byte1_379[1]);
                 if (Convert.ToInt32(parameter7_4byte1_379[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_379[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }



            //190
           cmdCode = Convert.ToInt32(parameter7_4byte1_381[1]);
                 if (Convert.ToInt32(parameter7_4byte1_381[1]) == 1)                                       //상대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);           //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //  방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_0011);//천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                    //블록데이터 구성

                BlockParaModel1s[123].BlockData = "상대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 상대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 2)                                        //절대위치결정
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호  hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호  hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);

                BlockParaModel1s[123].BlockData = "절대위치결정" +
                    ", 속도번호:V" + SpdNum.ToString() +
                    ", 가속설정번호:A" + AccNum.ToString() +
                    ", 감속설정번호:D" + Decnum.ToString() +
                    ", 천이조건:" + BlockChif.ToString() +
                    ", 절대이동량:" + TargetPosition.ToString();

            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 3)                                       //JOG운전
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호 hiki1
                AccNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) & 0b_0000_1111);       //가속번호 hiki2
                Decnum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) >> 4);                 //감속번호 hiki3
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:정방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "JOG" +
                   ", 속도번호:V" + SpdNum.ToString() +
                   ", 가속설정번호:A" + AccNum.ToString() +
                   ", 감속설정번호:D" + Decnum.ToString() +
                   ", JOG방향:부방향" +
                   ", 천이조건:" + BlockChif.ToString();
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 4)                                      //원점복귀
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //검출방법 hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//방향     hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5

                if (SpdNum == 1)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME+Z상" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else if (SpdNum == 2)
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:HOME" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }
                else
                {
                    if (Movidr == 0)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:정방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                    else if (Movidr == 1)
                    {
                        BlockParaModel1s[123].BlockData = "원점복귀" +
                        ", 원점 복귀 방법:제조사 사용" +
                        ", 복귀방향:부방향" +
                        ", 천이조건:" + BlockChif.ToString();
                    }
                }

            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 5)                                       //감속정지
            {
                StopMethod = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //정지방법 hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5


                if (StopMethod == 0)
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:감속정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "감속정지" +
                    ", 정지방법:즉시정지" +
                   ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 6)                                       //속도갱신
            {
                SpdNum = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[0]) >> 4);                 //속도번호  hiki1
                Movidr = (UInt16)((Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);//동작방향  hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건  hiki5

                if (Movidr == 0)
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                       ", 속도번호:V" + SpdNum.ToString() +
                      ", JOG방향:정방향" +
                      ", 천이조건:" + BlockChif.ToString();
                }
                else
                {
                    BlockParaModel1s[123].BlockData = "속도갱신" +
                      ", 속도번호:V" + SpdNum.ToString() +
                     ", JOG방향:부방향" +
                     ", 천이조건:" + BlockChif.ToString();
                }
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 7)                                       //디크리멘트 카운트 기동
            {
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                           //카운트 설정값 hiki7

                BlockParaModel1s[123].BlockData = "디크리멘트 카운터 기동" +
                     ", 천이조건:" + BlockChif.ToString() +
                     ", 카운터 설정지[1ms]:" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 8)                                       //출력신호조작            
            {
                b_CTRL1_2 = (Convert.ToUInt16(parameter7_4byte1_247[0]) >> 4);                       //hiki1
                b_CTRL3_4 = (Convert.ToUInt16(parameter7_4byte1_247[0]) & 0b_0000_1111);             //hiki2
                b_CTRL5_6 = (Convert.ToUInt16(parameter7_4byte1_247[3]) >> 4);                       //hiki3
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);       //천이 조건hiki5

                OutPutsignalcombo1 = (int)(((b_CTRL1_2) & 0b_1100) >> 2);
                OutPutsignalcombo2 = (int)((b_CTRL1_2) & 0b_0011);
                OutPutsignalcombo3 = (int)(((b_CTRL3_4) & 0b_1100) >> 2);
                OutPutsignalcombo4 = (int)((b_CTRL3_4) & 0b_0011);
                OutPutsignalcombo5 = (int)(((b_CTRL5_6) & 0b_1100) >> 2);
                OutPutsignalcombo6 = (int)((b_CTRL5_6) & 0b_0011);

                string bctrl1 = "";
                string bctrl2 = "";
                string bctrl3 = "";
                string bctrl4 = "";
                string bctrl5 = "";
                string bctrl6 = "";

                switch (OutPutsignalcombo1)
                {
                    case 0:
                        bctrl1 = "유지";
                        break;
                    case 2:
                        bctrl1 = "오프";
                        break;
                    case 3:
                        bctrl1 = "온";
                        break;
                }

                switch (OutPutsignalcombo2)
                {
                    case 0:
                        bctrl2 = "유지";
                        break;
                    case 2:
                        bctrl2 = "오프";
                        break;
                    case 3:
                        bctrl2 = "온";
                        break;
                }

                switch (OutPutsignalcombo3)
                {
                    case 0:
                        bctrl3 = "유지";
                        break;
                    case 2:
                        bctrl3 = "오프";
                        break;
                    case 3:
                        bctrl3 = "온";
                        break;
                }

                switch (OutPutsignalcombo4)
                {
                    case 0:
                        bctrl4 = "유지";
                        break;
                    case 2:
                        bctrl4 = "오프";
                        break;
                    case 3:
                        bctrl4 = "온";
                        break;
                }

                switch (OutPutsignalcombo5)
                {
                    case 0:
                        bctrl5 = "유지";
                        break;
                    case 2:
                        bctrl5 = "오프";
                        break;
                    case 3:
                        bctrl5 = "온";
                        break;
                }

                switch (OutPutsignalcombo6)
                {
                    case 0:
                        bctrl6 = "유지";
                        break;
                    case 2:
                        bctrl6 = "오프";
                        break;
                    case 3:
                        bctrl6 = "온";
                        break;
                }

                BlockParaModel1s[123].BlockData = "출력신호조작" +
                ", B-CTRL1:" + bctrl1 +
                ", B-CTRL2:" + bctrl2 +
                ", B-CTRL3:" + bctrl3 +
                ", B-CTRL4:" + bctrl4 +
                ", B-CTRL5:" + bctrl5 +
                ", B-CTRL6:" + bctrl6 +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 9)                                       //점프
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  //   hiki4
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);          //천이조건 hiki5

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                BlockParaModel1s[123].BlockData = "점프" +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 10)      // 조건분기(=)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(=)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 11)      // 조건분기(>)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4   
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);
                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(>)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }
            else if (Convert.ToInt32(parameter7_4byte1_381[1]) == 12)      // 조건분기(<)
            {
                ushort hiki2local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) & 0b_0000_1111); // hiki2
                ushort hiki3local = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[3]) >> 4);           // hiki3
                ushort hiki4local = (UInt16)((Convert.ToInt16(parameter7_4byte1_247[3]) & 0b_0000_1111) >> 2);  // hiki4
                SpdNum = (UInt16)(Convert.ToInt16(parameter7_4byte1_247[0]) >> 4);                      // 비교대상  hiki1              
                BlockChif = (UInt16)(Convert.ToInt32(parameter7_4byte1_247[3]) & 0b_0000_0011);      //천이조건 hiki5   
                TargetPosition = BitConverter.ToInt32(parameter7_4byte1_248, 0);                     //비교값   hiki7

                JumpBlockNum = (ushort)((hiki2local << 6) + (hiki3local << 2) + hiki4local);

                string comp = "";
                switch (SpdNum)
                {
                    case 0:
                        comp = "지령위치";
                        break;
                    case 1:
                        comp = "현재위치";
                        break;
                    case 2:
                        comp = "위치편차";
                        break;
                    case 3:
                        comp = "지령속도";
                        break;
                    case 4:
                        comp = "모터속도";
                        break;
                    case 5:
                        comp = "지령토크";
                        break;
                    case 6:
                        comp = "디크리멘트카운트";
                        break;
                    case 7:
                        comp = "입력신호";
                        break;
                    case 8:
                        comp = "출력신호";
                        break;
                }

                BlockParaModel1s[123].BlockData = "조건분기(<)" +
                ", 비교대상:" + comp +
                ", 블록번호:" + JumpBlockNum.ToString() +
                ", 천이조건:" + BlockChif.ToString() +
                ", 비교값(역치):" + TargetPosition.ToString();
            }


            Debug.WriteLine("실행 완료");

        }
    }
}
